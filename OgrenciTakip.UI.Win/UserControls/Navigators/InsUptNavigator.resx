<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageCollection.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v20.2" name="DevExpress.Utils.v20.2, Version=20.2.3.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v20.2" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYyMC4yLCBWZXJzaW9uPTIwLjIu
        My4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABAAAAAQAAAACQUAAAAP
        BQAAAHoUAAACbQMAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAAFzUkdCAK7OHOkA
        AAAEZ0FNQQAAsY8L/GEFAAAAJ3RFWHRUaXRsZQBGaXJzdDtBcnJvdztCYWNrO1NraXA7UHJldjtSZXdp
        bmQBjpDUAAAC5ElEQVQ4T6WTeyzVYRjH3xIx95T+sNZKS6nINK2ty6w0UlLUoatCktgx16XckmphJ50w
        DrVDLmsitAl1OOTO4RyX0qxlVpviuDuHP76977GfrX/r3b6/3/M87/P9PHt/e38EwH9pJYgpHiRRBQMk
        UjxAwsT9hP9CQUJyFSQou5cEZsrIDWE3oWs1lQ6VLos1ALpWUa2hYhvaLOfnycntnF5yK6uHBAhltKQx
        rnUJFh32TqqXeD1oYU49DqAdLe6RBjzrgl9as5TmOmMLIL+p6GJwnWO+qbt4iXVF4SI5KuVKeCY2sk1D
        DqAbU9gPpRrwFbRryFTMqO1wOtSCF1+TEZIpU5V2/kLjqBofR9Rwi5WyPiMOoBct7kPVsBpXU1pZxXir
        vbOpZ2zlPX9Bx1RB0090jS2hcliF551zKBtawIkoiaaPA+iH5clR9lWFSw+b4RKSzb+e1jqaUfMdnT8W
        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
</value>
  </data>
</root>