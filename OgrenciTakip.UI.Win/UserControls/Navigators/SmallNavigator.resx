<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageCollection.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v20.2" name="DevExpress.Utils.v20.2, Version=20.2.3.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v20.2" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYyMC4yLCBWZXJzaW9uPTIwLjIu
        My4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABAAAAAQAAAACQUAAAAP
        BQAAAKsNAAACYAMAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAARnQU1BAACxjwv8
        YQUAAAAndEVYdFRpdGxlAEZpcnN0O0Fycm93O0JhY2s7U2tpcDtQcmV2O1Jld2luZAGOkNQAAALkSURB
        VDhPpZN7LNVhGMffEjH3lP6w1kpLqcg0ra3LrDRSUtShq0KS2DHXpdySamEnnTAOtUMuayK0CXU45M7h
        HJfSrGVWm+K4O4c/vr3vsZ+tf+vdvr/f8zzv8/08e397fwTAf2kliCkeJFEFAyRSPEDCxP2E/0JBQnIV
        JCi7lwRmysgNYTehazWVDpUuizUAulZRraFiG9os5+fJye2cXnIrq4cECGW0pDGudQkWHfZOqpd4PWhh
        Tj0OoB0t7pEGPOuCX1qzlOY6Ywsgv6noYnCdY76pu3iJdUXhIjkq5Up4JjayTUMOoBtT2A+lGvAVtGvI
        VMyo7XA61IIXX5MRkilTlXb+QuOoGh9H1HCLlbI+Iw6gFy3uQ9WwGldTWlnFeKu9s6lnbOU9f0HHVEHT
        T3SNLaFyWIXnnXMoG1rAiSiJpo8D6IflyVH2VYVLD5vhEpLNv57WOppR8x2dPxbRMLqEgkEVMrrnkNI2
        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
        dF3u4d8A+QUoZgjOmLAzUAAAAABJRU5ErkJgggs=
</value>
  </data>
</root>